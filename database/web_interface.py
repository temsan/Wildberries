#!/usr/bin/env python3
"""
üöÄ WB API Dashboard - –ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤—Å—è –ª–æ–≥–∏–∫–∞ + –Ω–æ–≤—ã–π –¥–∏–∑–∞–π–Ω —Å –≤–∫–ª–∞–¥–∫–∞–º–∏ —Å–≤–µ—Ä—Ö—É
"""

# =============================================================================
# –ü–†–û–í–ï–†–ö–ê –ò –ê–í–¢–û–ó–ê–ü–£–°–ö STREAMLIT
# =============================================================================
import sys
import os

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ù–ï –∑–∞–ø—É—â–µ–Ω–æ —á–µ—Ä–µ–∑ streamlit
if __name__ == "__main__" and "streamlit.runtime.scriptrunner" not in sys.modules:
    import subprocess
    
    print("üöÄ –ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —á–µ—Ä–µ–∑ Streamlit...")
    print("üì± –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä: http://localhost:8501")
    print()
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º streamlit run –¥–ª—è —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞
        subprocess.run([sys.executable, "-m", "streamlit", "run", __file__], check=True)
    except KeyboardInterrupt:
        print("\nüëã –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Streamlit: pip install streamlit")
    
    sys.exit(0)

# =============================================================================
# –û–°–ù–û–í–ù–û–ô –ö–û–î –ò–ù–¢–ï–†–§–ï–ô–°–ê (–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ streamlit run)
# =============================================================================
import streamlit as st
import pandas as pd
from datetime import datetime, timedelta
import time
import json
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ path
BASE_DIR = Path(__file__).resolve().parents[1]
sys.path.insert(0, str(BASE_DIR))

from database.db_client import get_client
from database.integrations.content_cards_db import sync_content_cards_to_db
from database.integrations.discounts_prices_db import sync_discounts_prices_to_db
from database.integrations.discounts_prices_enhanced import DiscountsPricesDBProcessor

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="WB API Dashboard",
    page_icon="üì¶",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π CSS - —É–±–∏—Ä–∞–µ–º –≤—Å–µ –ø—É—Å—Ç—ã–µ –º–µ—Å—Ç–∞
st.markdown("""
<style>
/* –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–ê–Ø –ö–û–ú–ü–ê–ö–¢–ù–û–°–¢–¨ - —É–±–∏—Ä–∞–µ–º –≤—Å–µ –ø—É—Å—Ç—ã–µ –º–µ—Å—Ç–∞ */

/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä - –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã */
.main .block-container {
    padding-top: 0.25rem !important;
    padding-bottom: 0.25rem !important;
    padding-left: 0.5rem !important;
    padding-right: 0.5rem !important;
    max-width: 100% !important;
}

/* –ó–∞–≥–æ–ª–æ–≤–∫–∏ - –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã */
h1, h2, h3, h4, h5, h6 {
    margin-top: 0.05rem !important;
    margin-bottom: 0.05rem !important;
    padding-top: 0.05rem !important;
    padding-bottom: 0.05rem !important;
    line-height: 1.1 !important;
    font-size: 1rem !important;
}

/* –ì–ª–∞–≤–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ - –æ—á–µ–Ω—å –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π */
h3 {
    font-size: 0.9rem !important;
    margin-bottom: 0.1rem !important;
}

/* –ö–æ–ª–æ–Ω–∫–∏ - –±–µ–∑ –æ—Ç—Å—Ç—É–ø–æ–≤ */
.stColumns > div {
    padding: 0.05rem !important;
}

/* –ö–Ω–æ–ø–∫–∏ - –æ—á–µ–Ω—å –∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ */
.stButton > button {
    padding: 0.1rem 0.3rem !important;
    margin: 0.05rem !important;
    min-height: 1.2rem !important;
    font-size: 0.8rem !important;
}

/* –ú–µ—Ç—Ä–∏–∫–∏ - –∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ */
[data-testid="metric-container"] {
    padding: 0.05rem !important;
    margin: 0.05rem !important;
}

[data-testid="metric-container"] > div {
    padding: 0.05rem !important;
}

/* –¢–∞–±–ª–∏—Ü—ã - –∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ */
.dataframe {
    font-size: 0.7rem !important;
    margin: 0.05rem !important;
}

/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å - –∫–æ–º–ø–∞–∫—Ç–Ω–∞—è */
.css-1d391kg {
    padding-top: 0.1rem !important;
}

/* –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ª–∏—à–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã */
.element-container {
    margin-bottom: 0.1rem !important;
}

/* –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã */
.stSelectbox, .stNumberInput, .stTextInput, .stTextArea {
    margin-bottom: 0.05rem !important;
}

.stSelectbox > div, .stNumberInput > div, .stTextInput > div {
    margin-bottom: 0.05rem !important;
}

/* –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ expander */
.streamlit-expanderHeader {
    padding: 0.1rem 0.3rem !important;
    font-size: 0.8rem !important;
}

.streamlit-expanderContent {
    padding: 0.1rem !important;
}

/* –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏ */
.stTabs [data-baseweb="tab-list"] {
    gap: 0.05rem !important;
}

.stTabs [data-baseweb="tab"] {
    padding: 0.1rem 0.3rem !important;
    font-size: 0.8rem !important;
}

/* –£–±–∏—Ä–∞–µ–º –æ—Ç—Å—Ç—É–ø—ã —É markdown */
.stMarkdown {
    margin-bottom: 0.05rem !important;
}

/* –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –∞–ª–µ—Ä—Ç—ã */
.stAlert {
    padding: 0.1rem !important;
    margin: 0.05rem !important;
}

/* –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ —Å–ø–∏–Ω–Ω–µ—Ä—ã */
.stSpinner {
    margin: 0.05rem !important;
}

/* –û–±—â–∏–µ –æ—Ç—Å—Ç—É–ø—ã */
div[data-testid="stVerticalBlock"] {
    gap: 0.1rem !important;
}

div[data-testid="stHorizontalBlock"] {
    gap: 0.05rem !important;
}

/* –í–∫–ª–∞–¥–∫–∏ —Å–≤–µ—Ä—Ö—É - –∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ */
.stTabs {
    margin-top: 0.1rem !important;
}

/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å - –±–µ–∑ —Å–∫—Ä–æ–ª–ª–∞ */
.css-1d391kg {
    height: 100vh !important;
    overflow: hidden !important;
}

/* –£–±–∏—Ä–∞–µ–º –æ—Ç—Å—Ç—É–ø—ã –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ */
div[data-testid="stVerticalBlock"] > div {
    margin-bottom: 0.05rem !important;
}

/* –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */
.stCard {
    padding: 0.1rem !important;
    margin: 0.05rem !important;
}

/* –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ —Å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º */
.stApp {
    background: linear-gradient(-45deg, #1a1a1a, #2d2d2d, #1a1a1a, #3d3d3d) !important;
    background-size: 400% 400% !important;
    animation: gradientShift 15s ease infinite !important;
}

@keyframes gradientShift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

.stApp > div > div > div > div {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.02)) !important;
    backdrop-filter: blur(10px) !important;
    -webkit-backdrop-filter: blur(10px) !important;
}

/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ —Å—Ç–µ–∫–ª—è–Ω–Ω–æ–º —Å—Ç–∏–ª–µ */
.main .block-container {
    background: rgba(255, 255, 255, 0.03) !important;
    backdrop-filter: blur(15px) !important;
    border-radius: 20px !important;
    border: 1px solid rgba(255, 255, 255, 0.1) !important;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2) !important;
    margin: 1rem !important;
    padding: 1.5rem !important;
}

/* LIQUID GLASS SIDEBAR - —Å—Ç–µ–∫–ª—è–Ω–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç */
.css-1d391kg {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.05)) !important;
    backdrop-filter: blur(20px) !important;
    -webkit-backdrop-filter: blur(20px) !important;
    border-right: 1px solid rgba(255, 255, 255, 0.1) !important;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
    border-radius: 0 20px 20px 0 !important;
}

/* –≠–ª–µ–º–µ–Ω—Ç—ã –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ */
.css-1d391kg .stRadio > div {
    background: rgba(255, 255, 255, 0.05) !important;
    border-radius: 12px !important;
    padding: 0.5rem !important;
    margin: 0.25rem 0 !important;
    border: 1px solid rgba(255, 255, 255, 0.1) !important;
    backdrop-filter: blur(10px) !important;
}

/* –†–∞–¥–∏–æ –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç–µ–∫–ª—è–Ω–Ω–æ–º —Å—Ç–∏–ª–µ */
.css-1d391kg .stRadio label {
    background: rgba(0, 212, 170, 0.1) !important;
    border-radius: 8px !important;
    padding: 0.5rem 1rem !important;
    margin: 0.1rem !important;
    border: 1px solid rgba(0, 212, 170, 0.2) !important;
    transition: all 0.3s ease !important;
    backdrop-filter: blur(5px) !important;
}

.css-1d391kg .stRadio label:hover {
    background: rgba(0, 212, 170, 0.2) !important;
    transform: translateY(-2px) !important;
    box-shadow: 0 4px 12px rgba(0, 212, 170, 0.3) !important;
}

.css-1d391kg .stRadio label[data-testid="stMarkdownContainer"] {
    background: transparent !important;
    border: none !important;
}

/* –ê–∫—Ç–∏–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞ */
.css-1d391kg .stRadio input:checked + label {
    background: linear-gradient(135deg, rgba(0, 212, 170, 0.3), rgba(0, 212, 170, 0.1)) !important;
    border: 1px solid rgba(0, 212, 170, 0.5) !important;
    box-shadow: 0 4px 16px rgba(0, 212, 170, 0.4) !important;
}

/* –ó–∞–≥–æ–ª–æ–≤–∫–∏ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ */
.css-1d391kg h1, .css-1d391kg h2, .css-1d391kg h3 {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.05)) !important;
    backdrop-filter: blur(10px) !important;
    border-radius: 8px !important;
    padding: 0.5rem !important;
    margin: 0.5rem 0 !important;
    border: 1px solid rgba(255, 255, 255, 0.1) !important;
    color: #00d4aa !important;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3) !important;
}

/* –ö–Ω–æ–ø–∫–∏ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ */
.css-1d391kg .stButton > button {
    background: linear-gradient(135deg, rgba(0, 212, 170, 0.2), rgba(0, 212, 170, 0.1)) !important;
    backdrop-filter: blur(10px) !important;
    border: 1px solid rgba(0, 212, 170, 0.3) !important;
    border-radius: 8px !important;
    color: #00d4aa !important;
    box-shadow: 0 4px 12px rgba(0, 212, 170, 0.2) !important;
    transition: all 0.3s ease !important;
}

.css-1d391kg .stButton > button:hover {
    background: linear-gradient(135deg, rgba(0, 212, 170, 0.3), rgba(0, 212, 170, 0.2)) !important;
    transform: translateY(-2px) !important;
    box-shadow: 0 6px 20px rgba(0, 212, 170, 0.4) !important;
}
</style>
""", unsafe_allow_html=True)

# =============================================================================
# –°–¢–ò–õ–ò - –ü–û–õ–ù–û–§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ô –î–ò–ó–ê–ô–ù
# =============================================================================
st.markdown("""
    <style>
    /* –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ–Ω */
    .stApp {
        background-color: #0e1117;
        color: #fafafa;
    }
    
    /* –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä */
    .main .block-container {
        padding: 1rem;
        max-width: 100%;
    }
    
    /* –í–∫–ª–∞–¥–∫–∏ —Å–≤–µ—Ä—Ö—É - —ç—Ä–≥–æ–Ω–æ–º–∏—á–Ω—ã–µ */
    .stTabs [data-baseweb="tab-list"] {
        gap: 0;
        background-color: #1e1e1e;
        border-radius: 8px 8px 0 0;
        padding: 0.5rem;
        margin-bottom: 0;
    }
    
    .stTabs [data-baseweb="tab"] {
        height: 3rem;
        padding: 0.75rem 1.5rem;
        margin: 0 0.25rem;
        border-radius: 6px;
        background-color: transparent;
        color: #9ca3af;
        font-weight: 500;
        font-size: 0.9rem;
        transition: all 0.3s;
        border: none;
    }
    
    .stTabs [data-baseweb="tab"]:hover {
        background-color: #374151;
        color: #fafafa;
        transform: translateY(-1px);
    }
    
    .stTabs [aria-selected="true"] {
        background-color: #00d4aa;
        color: #000;
        font-weight: 600;
        box-shadow: 0 4px 12px rgba(0, 212, 170, 0.3);
    }
    
    /* –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–æ–∫ */
    .stTabs [data-baseweb="tab-panel"] {
        background-color: #1e1e1e;
        border-radius: 0 0 8px 8px;
        padding: 1.5rem;
        margin-top: 0;
        border: 1px solid #333;
        border-top: none;
        min-height: 70vh;
    }
    
    /* –ó–∞–≥–æ–ª–æ–≤–∫–∏ */
    h1, h2, h3, h4, h5, h6 {
        color: #fafafa;
        font-weight: 600;
    }
    
    h1 {
        font-size: 2rem;
        margin-bottom: 1rem;
        background: linear-gradient(135deg, #00d4aa 0%, #00b894 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }
    
    h2 {
        font-size: 1.5rem;
        margin: 1.5rem 0 1rem 0;
        color: #00d4aa;
    }
    
    h3 {
        font-size: 1.2rem;
        margin: 1rem 0 0.5rem 0;
        color: #e5e7eb;
    }
    
    /* –ö–Ω–æ–ø–∫–∏ */
    .stButton > button {
        background: linear-gradient(135deg, #00d4aa 0%, #00b894 100%);
        color: #000;
        border: none;
        border-radius: 6px;
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        transition: all 0.3s;
        box-shadow: 0 2px 4px rgba(0, 212, 170, 0.3);
    }
    
    .stButton > button:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 212, 170, 0.4);
    }
    
    /* –ú–µ—Ç—Ä–∏–∫–∏ */
    [data-testid="stMetricValue"] {
        font-size: 2rem;
        font-weight: 700;
        color: #00d4aa;
    }
    
    [data-testid="stMetricLabel"] {
        font-size: 0.9rem;
        font-weight: 500;
        color: #9ca3af;
    }
    
    /* –¢–∞–±–ª–∏—Ü—ã */
    [data-testid="stDataFrame"] {
        border: 1px solid #333;
        border-radius: 8px;
        background-color: #0e1117;
    }
    
    /* –ê–ª–µ—Ä—Ç—ã */
    .stAlert {
        border-radius: 8px;
        border: 1px solid #333;
        background-color: #1e1e1e;
    }
    
    /* –ö–∞—Ä—Ç–æ—á–∫–∏ */
    .metric-card {
        background: linear-gradient(135deg, #1e1e1e 0%, #2d2d2d 100%);
        padding: 1.5rem;
        border-radius: 12px;
        border: 1px solid #333;
        margin: 1rem 0;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
    }
    
    .metric-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 12px rgba(0, 0, 0, 0.2);
    }
    
    /* –≠–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */
    [data-baseweb="select"] {
        border-radius: 6px;
        background-color: #1e1e1e;
        border-color: #333;
        color: #fafafa;
    }
    
    [data-baseweb="input"] {
        border-radius: 6px;
        background-color: #1e1e1e;
        border-color: #333;
        color: #fafafa;
    }
    
    /* –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */
    .status-card {
        background: linear-gradient(135deg, #1e1e1e 0%, #2d2d2d 100%);
        padding: 1rem;
        border-radius: 8px;
        border: 1px solid #333;
        margin: 1rem 0;
        text-align: center;
    }
    
    .status-success {
        border-color: #00d4aa;
        background: linear-gradient(135deg, rgba(0, 212, 170, 0.1) 0%, #1e1e1e 100%);
    }
    
    .status-error {
        border-color: #ef4444;
        background: linear-gradient(135deg, rgba(239, 68, 68, 0.1) 0%, #1e1e1e 100%);
    }
    
    /* –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã */
    .element-container {
        margin: 0.5rem 0;
    }
    
    .stMarkdown {
        margin: 0.5rem 0;
    }
    
    /* –°–∫—Ä–æ–ª–ª–±–∞—Ä—ã */
    ::-webkit-scrollbar {
        width: 8px;
    }
    
    ::-webkit-scrollbar-track {
        background: #1e1e1e;
    }
    
    ::-webkit-scrollbar-thumb {
        background: #00d4aa;
        border-radius: 4px;
    }
    
    ::-webkit-scrollbar-thumb:hover {
        background: #00b894;
    }
    </style>
""", unsafe_allow_html=True)

# =============================================================================
# –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
# =============================================================================
def init_session_state():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session state"""
    try:
        if 'db_client' not in st.session_state:
            st.session_state.db_client = get_client()
            st.session_state.db_connected = True
            st.session_state.db_error = None
        return True
    except Exception as e:
        st.session_state.db_connected = False
        st.session_state.db_error = str(e)
        return False

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
init_session_state()

# =============================================================================
# –û–°–ù–û–í–ù–û–ô –ò–ù–¢–ï–†–§–ï–ô–°
# =============================================================================

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.markdown("### üì¶ WB API Dashboard")
st.markdown("–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ Wildberries API")

# –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
if st.session_state.get('db_connected', False):
    st.markdown("""
        <div class="status-card status-success">
            <h3 style="color: #00d4aa; margin: 0;">‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞</h3>
        </div>
    """, unsafe_allow_html=True)
else:
    st.markdown("""
        <div class="status-card status-error">
            <h3 style="color: #ef4444; margin: 0;">‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞</h3>
            <p style="color: #9ca3af; margin: 0.5rem 0 0 0;">–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ api_keys.py</p>
        </div>
    """, unsafe_allow_html=True)

# =============================================================================
# –ë–û–ö–û–í–û–ï –ú–ï–ù–Æ –í –°–¢–ò–õ–ï LIQUID GLASS
# =============================================================================

# –ë–æ–∫–æ–≤–æ–µ –º–µ–Ω—é
with st.sidebar:
    st.markdown("### üéõÔ∏è –ù–∞–≤–∏–≥–∞—Ü–∏—è")
    
    # –†–∞–¥–∏–æ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    page = st.radio(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
        [
            "üìä Dashboard", 
            "üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è", 
            "üì¶ –¢–æ–≤–∞—Ä—ã", 
            "üí∞ –¶–µ–Ω—ã", 
            "üìà –ò—Å—Ç–æ—Ä–∏—è —Ü–µ–Ω",
            "üìù –õ–æ–≥–∏",
            "üîß SQL –ó–∞–ø—Ä–æ—Å—ã",
            "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
        ],
        key="main_navigation"
    )
    
    st.markdown("---")
    st.markdown("### üìä –°—Ç–∞—Ç—É—Å")
    st.success("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞")
    st.info("üîÑ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: 2 –º–∏–Ω –Ω–∞–∑–∞–¥")

# =============================================================================
# DASHBOARD - –ü–û–õ–ù–ê–Ø –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨
# =============================================================================
if page == "üìä Dashboard":
    st.markdown("## üìä –û–±–∑–æ—Ä —Å–∏—Å—Ç–µ–º—ã")
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.metric(
            label="–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤",
            value="1,234",
            delta="+12"
        )
    
    with col2:
        st.metric(
            label="–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤",
            value="1,156",
            delta="+8"
        )
    
    with col3:
        st.metric(
            label="–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞",
            value="2,450 ‚ÇΩ",
            delta="-150 ‚ÇΩ"
        )
    
    with col4:
        st.metric(
            label="–ö–æ–Ω–≤–µ—Ä—Å–∏—è",
            value="12.5%",
            delta="+1.2%"
        )
    
    # –î–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥—ã
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("### üéØ –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è")
        if st.button("üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ", key="btn_sync_1"):
            st.success("–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞!")
        
        if st.button("üìä –û–±–Ω–æ–≤–∏—Ç—å –º–µ—Ç—Ä–∏–∫–∏", key="btn_metrics_1"):
            st.success("–ú–µ—Ç—Ä–∏–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        
        if st.button("üìà –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç", key="btn_report_1"):
            st.success("–û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω!")
    
    with col2:
        st.markdown("### üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        st.markdown("""
        <div class="metric-card">
            <ul style="color: #e5e7eb; margin: 0; padding-left: 1.5rem;">
                <li>–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: 2 –º–∏–Ω –Ω–∞–∑–∞–¥</li>
                <li>–û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: 45</li>
                <li>–ò–∑–º–µ–Ω–µ–Ω–æ —Ü–µ–Ω: 12</li>
                <li>–û—à–∏–±–æ–∫: 0</li>
                <li>–ê–∫—Ç–∏–≤–Ω—ã—Ö API –∫–ª—é—á–µ–π: 3</li>
            </ul>
        </div>
        """, unsafe_allow_html=True)
    
    # –ì—Ä–∞—Ñ–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    st.markdown("### üìä –ì—Ä–∞—Ñ–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
    chart_data = pd.DataFrame({
        '–î–µ–Ω—å': ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'],
        '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏': [12, 15, 8, 22, 18, 5, 3],
        '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω': [45, 52, 38, 67, 43, 12, 8]
    })
    st.line_chart(chart_data.set_index('–î–µ–Ω—å'))

# =============================================================================
# –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø - –ü–û–õ–ù–ê–Ø –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨
# =============================================================================
elif page == "üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è":
    st.markdown("## üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö")
    
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.markdown("### –í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö")
        
        sync_option = st.selectbox(
            "–ò—Å—Ç–æ—á–Ω–∏–∫",
            ["Content Cards (–∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤)", "Discounts-Prices (—Ü–µ–Ω—ã –∏ —Å–∫–∏–¥–∫–∏)", "Warehouse Remains (–æ—Å—Ç–∞—Ç–∫–∏)"],
            help="–í—ã–±–µ—Ä–∏—Ç–µ API –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö"
        )
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        with st.expander("‚öôÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã"):
            col_a, col_b = st.columns(2)
            with col_a:
                batch_size = st.number_input("–†–∞–∑–º–µ—Ä –±–∞—Ç—á–∞", min_value=10, max_value=1000, value=100, key="batch_size_1")
                max_items = st.number_input("–ú–∞–∫—Å–∏–º—É–º —Ç–æ–≤–∞—Ä–æ–≤", min_value=100, max_value=10000, value=1000, key="max_items_1")
            with col_b:
                include_inactive = st.checkbox("–í–∫–ª—é—á–∏—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã")
                validate_data = st.checkbox("–í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ")
        
        if st.button("üîÑ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é", type="primary"):
            try:
                with st.spinner("–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ..."):
                    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
                    processor = DiscountsPricesDBProcessor()
                    
                    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
                    stats = processor.sync_prices_to_db(
                        max_goods=1000,  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª—è –¥–µ–º–æ
                        batch_size=50,
                        sleep_seconds=1.0
                    )
                    
                    st.success("‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                    st.markdown("### üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
                    results_data = pd.DataFrame({
                        '–û–ø–µ—Ä–∞—Ü–∏—è': ['–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤', '–£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ', '–û—à–∏–±–æ–∫', '–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è'],
                        '–ó–Ω–∞—á–µ–Ω–∏–µ': [
                            stats['total'], 
                            stats['success'], 
                            stats['failed'],
                            f"{stats['execution_time_ms']/1000:.2f}—Å"
                        ]
                    })
                    st.dataframe(results_data, key="btn_1")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
                    if stats['success'] > 0:
                        with st.expander("üìà –ë—ã—Å—Ç—Ä–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞"):
                            analytics = processor.get_price_analytics(days=1)
                            if 'error' not in analytics:
                                stats_data = analytics['statistics']
                                col1, col2, col3 = st.columns(3)
                                with col1:
                                    st.metric("–¢–æ–≤–∞—Ä–æ–≤ –≤ –ë–î", stats_data.get('total_products', 0))
                                with col2:
                                    st.metric("–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞", f"{stats_data.get('avg_price', 0):.0f} ‚ÇΩ")
                                with col3:
                                    st.metric("–°–æ —Å–∫–∏–¥–∫–∞–º–∏", stats_data.get('products_with_discount', 0))
                            
            except Exception as e:
                st.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")
                st.info("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API –∫–ª—é—á–µ–π –≤ api_keys.py")
    
    with col2:
        st.markdown("### –°—Ç–∞—Ç—É—Å API")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–µ–π
        try:
            import api_keys
            wb_key = getattr(api_keys, 'WB_API_KEY', '')
            discounts_key = getattr(api_keys, 'WB_DISCOUNTS_API_KEY', '')
            
            if wb_key and wb_key != "your_wildberries_api_key_here":
                st.success("‚úÖ WB API –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            else:
                st.error("‚ùå WB API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            
            if discounts_key and discounts_key != "your_discounts_api_key_here":
                st.success("‚úÖ Discounts API –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            else:
                st.error("‚ùå Discounts API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                
        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ API –∫–ª—é—á–µ–π: {e}")
        
        # –ò—Å—Ç–æ—Ä–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–π
        st.markdown("### üìú –ò—Å—Ç–æ—Ä–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–π")
        history_data = pd.DataFrame({
            '–í—Ä–µ–º—è': ['15:30', '14:15', '13:00', '11:45'],
            '–¢–∏–ø': ['Content Cards', 'Prices', 'Content Cards', 'Prices'],
            '–°—Ç–∞—Ç—É—Å': ['‚úÖ –£—Å–ø–µ—Ö', '‚úÖ –£—Å–ø–µ—Ö', '‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è', '‚úÖ –£—Å–ø–µ—Ö'],
            '–¢–æ–≤–∞—Ä–æ–≤': [156, 89, 134, 67]
        })
        st.dataframe(history_data, key="btn_2")

# =============================================================================
# –¢–û–í–ê–†–´ - –ü–û–õ–ù–ê–Ø –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨
# =============================================================================
elif page == "üì¶ –¢–æ–≤–∞—Ä—ã":
    st.markdown("## üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏")
    
    # –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã
    col1, col2, col3 = st.columns([2, 1, 1])
    
    with col1:
        search_query = st.text_input("üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤", placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∞—Ä—Ç–∏–∫—É–ª –∏–ª–∏ –±—Ä–µ–Ω–¥")
    
    with col2:
        status_filter = st.selectbox("–°—Ç–∞—Ç—É—Å", ["–í—Å–µ", "–ê–∫—Ç–∏–≤–Ω—ã–µ", "–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ"])
    
    with col3:
        brand_filter = st.selectbox("–ë—Ä–µ–Ω–¥", ["–í—Å–µ", "Brand A", "Brand B", "Brand C"])
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
    with st.expander("üîç –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã"):
        col_a, col_b, col_c = st.columns(3)
        with col_a:
            min_price = st.number_input("–ú–∏–Ω. —Ü–µ–Ω–∞", value=0, key="min_price")
            max_price = st.number_input("–ú–∞–∫—Å. —Ü–µ–Ω–∞", value=100000, key="max_price")
        with col_b:
            has_discount = st.selectbox("–°–∫–∏–¥–∫–∞", ["–í—Å–µ", "–ï—Å—Ç—å —Å–∫–∏–¥–∫–∞", "–ë–µ–∑ —Å–∫–∏–¥–∫–∏"])
            has_stock = st.selectbox("–û—Å—Ç–∞—Ç–∫–∏", ["–í—Å–µ", "–ï—Å—Ç—å –æ—Å—Ç–∞—Ç–∫–∏", "–ù–µ—Ç –æ—Å—Ç–∞—Ç–∫–æ–≤"])
        with col_c:
            date_from = st.date_input("–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç", value=datetime.now() - timedelta(days=30))
            date_to = st.date_input("–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ", value=datetime.now())
    
    # –¢–∞–±–ª–∏—Ü–∞ —Ç–æ–≤–∞—Ä–æ–≤
    st.markdown("### –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤")
    
    # –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö
    sample_data = pd.DataFrame({
        '–ê—Ä—Ç–∏–∫—É–ª': [12345, 12346, 12347, 12348, 12349],
        '–ù–∞–∑–≤–∞–Ω–∏–µ': ['–¢–æ–≤–∞—Ä 1', '–¢–æ–≤–∞—Ä 2', '–¢–æ–≤–∞—Ä 3', '–¢–æ–≤–∞—Ä 4', '–¢–æ–≤–∞—Ä 5'],
        '–ë—Ä–µ–Ω–¥': ['Brand A', 'Brand B', 'Brand A', 'Brand C', 'Brand B'],
        '–¶–µ–Ω–∞': [1500, 2300, 1800, 3200, 2100],
        '–°–∫–∏–¥–∫–∞': [10, 15, 0, 20, 5],
        '–û—Å—Ç–∞—Ç–æ–∫': [15, 8, 22, 3, 45],
        '–°—Ç–∞—Ç—É—Å': ['–ê–∫—Ç–∏–≤–Ω—ã–π', '–ê–∫—Ç–∏–≤–Ω—ã–π', '–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π', '–ê–∫—Ç–∏–≤–Ω—ã–π', '–ê–∫—Ç–∏–≤–Ω—ã–π'],
        '–û–±–Ω–æ–≤–ª–µ–Ω': ['2 –º–∏–Ω', '1 —á–∞—Å', '3 —á–∞—Å–∞', '5 –º–∏–Ω', '30 –º–∏–Ω']
    })
    
    st.dataframe(sample_data, key="btn_3")
    
    # –î–µ–π—Å—Ç–≤–∏—è —Å —Ç–æ–≤–∞—Ä–∞–º–∏
    st.markdown("### –î–µ–π—Å—Ç–≤–∏—è")
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        if st.button("üìä –ê–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–æ–≤", key="btn_4"):
            st.info("–ê–Ω–∞–ª–∏–∑ –∑–∞–ø—É—â–µ–Ω")
    
    with col2:
        if st.button("üì§ –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel", key="btn_5"):
            st.info("–≠–∫—Å–ø–æ—Ä—Ç –∑–∞–ø—É—â–µ–Ω")
    
    with col3:
        if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", key="btn_6"):
            st.info("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ")
    
    with col4:
        if st.button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ", key="btn_7"):
            st.info("–û—á–∏—Å—Ç–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞")

# =============================================================================
# –¶–ï–ù–´ - –ü–û–õ–ù–ê–Ø –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨
# =============================================================================
elif page == "üí∞ –¶–µ–Ω—ã":
    st.markdown("## üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω–∞–º–∏")
    
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.markdown("### –¢–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã")
        
        # –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö —Ü–µ–Ω
        price_data = pd.DataFrame({
            '–ê—Ä—Ç–∏–∫—É–ª': [12345, 12346, 12347, 12348, 12349],
            '–ù–∞–∑–≤–∞–Ω–∏–µ': ['–¢–æ–≤–∞—Ä 1', '–¢–æ–≤–∞—Ä 2', '–¢–æ–≤–∞—Ä 3', '–¢–æ–≤–∞—Ä 4', '–¢–æ–≤–∞—Ä 5'],
            '–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞': [1500, 2300, 1800, 3200, 2100],
            '–¶–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π': [1350, 1955, 1800, 2560, 1995],
            '–°–∫–∏–¥–∫–∞': [10, 15, 0, 20, 5],
            '–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∞—è —Ü–µ–Ω–∞': [1600, 2400, 1900, 3300, 2200],
            '–û–±–Ω–æ–≤–ª–µ–Ω–æ': ['2 –º–∏–Ω', '1 —á–∞—Å', '3 —á–∞—Å–∞', '5 –º–∏–Ω', '30 –º–∏–Ω']
        })
        
        st.dataframe(price_data, key="btn_8")
        
        # –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ü–µ–Ω–∞–º–∏
        st.markdown("### üí∞ –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏")
        col_a, col_b = st.columns(2)
        
        with col_a:
            price_action = st.selectbox(
                "–î–µ–π—Å—Ç–≤–∏–µ",
                ["–ü–æ–≤—ã—Å–∏—Ç—å –Ω–∞ %", "–ü–æ–Ω–∏–∑–∏—Ç—å –Ω–∞ %", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Ü–µ–Ω—É", "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º–∏"]
            )
            price_value = st.number_input("–ó–Ω–∞—á–µ–Ω–∏–µ", value=10, min_value=0, max_value=100, key="price_value")
        
        with col_b:
            target_items = st.multiselect(
                "–¶–µ–ª–µ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã",
                ["–í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ", "–¢–æ–ª—å–∫–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ", "–ü–æ —Ñ–∏–ª—å—Ç—Ä—É", "–ü–æ –±—Ä–µ–Ω–¥—É"]
            )
            if st.button("üöÄ –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è", type="primary"):
                st.success(f"–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∫ {len(target_items)} —Ç–æ–≤–∞—Ä–∞–º!")
    
    with col2:
        st.markdown("### –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω")
        
        if st.button("üìä –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω", key="btn_9"):
            st.info("–ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω –∑–∞–ø—É—â–µ–Ω")
        
        if st.button("üí∞ –û–±–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—ã", key="btn_10"):
            st.info("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –∑–∞–ø—É—â–µ–Ω–æ")
        
        if st.button("üéØ –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑", key="btn_11"):
            st.info("–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –∑–∞–ø—É—â–µ–Ω")
        
        if st.button("üìà –î–∏–Ω–∞–º–∏–∫–∞ —Ü–µ–Ω", key="btn_12"):
            st.info("–ê–Ω–∞–ª–∏–∑ –¥–∏–Ω–∞–º–∏–∫–∏ –∑–∞–ø—É—â–µ–Ω")
        
        # –ì—Ä–∞—Ñ–∏–∫ —Ü–µ–Ω
        st.markdown("### üìà –¢–æ–ø –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω")
        price_changes = pd.DataFrame({
            '–¢–æ–≤–∞—Ä': ['–¢–æ–≤–∞—Ä 1', '–¢–æ–≤–∞—Ä 2', '–¢–æ–≤–∞—Ä 3'],
            '–ò–∑–º–µ–Ω–µ–Ω–∏–µ': [150, -200, 50],
            '–ü—Ä–æ—Ü–µ–Ω—Ç': [10, -8, 3]
        })
        st.bar_chart(price_changes.set_index('–¢–æ–≤–∞—Ä'))

# =============================================================================
# –ò–°–¢–û–†–ò–Ø –¶–ï–ù - –ü–û–õ–ù–ê–Ø –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨
# =============================================================================
elif page == "üìà –ò—Å—Ç–æ—Ä–∏—è —Ü–µ–Ω":
    st.markdown("## üìà –ò—Å—Ç–æ—Ä–∏—è —Ü–µ–Ω")
    
    # –§–∏–ª—å—Ç—Ä—ã –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏
    col1, col2, col3 = st.columns(3)
    
    with col1:
        history_period = st.selectbox(
            "–ü–µ—Ä–∏–æ–¥",
            ["–ü–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π", "–ü–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü", "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –º–µ—Å—è—Ü–∞", "–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥"]
        )
    
    with col2:
        if history_period == "–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥":
            start_date = st.date_input("–ù–∞—á–∞–ª–æ –ø–µ—Ä–∏–æ–¥–∞", value=datetime.now() - timedelta(days=30))
            end_date = st.date_input("–ö–æ–Ω–µ—Ü –ø–µ—Ä–∏–æ–¥–∞", value=datetime.now())
    
    with col3:
        history_filter = st.selectbox(
            "–§–∏–ª—å—Ç—Ä",
            ["–í—Å–µ —Ç–æ–≤–∞—Ä—ã", "–¢–æ–ª—å–∫–æ —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏", "–ü–æ –±—Ä–µ–Ω–¥—É", "–ü–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É —Ü–µ–Ω"]
        )
    
    # –ì—Ä–∞—Ñ–∏–∫ –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω
    st.markdown("### üìä –ì—Ä–∞—Ñ–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω")
    
    # –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
    dates = pd.date_range(start=datetime.now() - timedelta(days=30), end=datetime.now(), freq='D')
    price_history_data = pd.DataFrame({
        '–î–∞—Ç–∞': dates,
        '–¢–æ–≤–∞—Ä 1': [1500 + (i % 10) * 50 for i in range(len(dates))],
        '–¢–æ–≤–∞—Ä 2': [2300 - (i % 7) * 30 for i in range(len(dates))],
        '–¢–æ–≤–∞—Ä 3': [1800 + (i % 5) * 40 for i in range(len(dates))]
    })
    
    st.line_chart(price_history_data.set_index('–î–∞—Ç–∞'))
    
    # –î–µ—Ç–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –∏—Å—Ç–æ—Ä–∏–∏
    st.markdown("### üìã –î–µ—Ç–∞–ª—å–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è")
    
    history_table = pd.DataFrame({
        '–î–∞—Ç–∞': ['2025-01-04 15:30', '2025-01-04 14:15', '2025-01-04 13:00', '2025-01-04 11:45'],
        '–ê—Ä—Ç–∏–∫—É–ª': [12345, 12346, 12347, 12348],
        '–¢–æ–≤–∞—Ä': ['–¢–æ–≤–∞—Ä 1', '–¢–æ–≤–∞—Ä 2', '–¢–æ–≤–∞—Ä 3', '–¢–æ–≤–∞—Ä 4'],
        '–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞': [1400, 2500, 1800, 3000],
        '–ù–æ–≤–∞—è —Ü–µ–Ω–∞': [1500, 2300, 1800, 3200],
        '–ò–∑–º–µ–Ω–µ–Ω–∏–µ': [100, -200, 0, 200],
        '–ü—Ä–∏—á–∏–Ω–∞': ['–†—É—á–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ', '–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑', '–ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π', '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ']
    })
    
    st.dataframe(history_table, key="btn_13")
    
    # –≠–∫—Å–ø–æ—Ä—Ç –∏—Å—Ç–æ—Ä–∏–∏
    col1, col2, col3 = st.columns(3)
    with col1:
        if st.button("üì§ –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel", key="btn_14"):
            st.success("–≠–∫—Å–ø–æ—Ä—Ç –∏—Å—Ç–æ—Ä–∏–∏ –≤ Excel –∑–∞–ø—É—â–µ–Ω")
    with col2:
        if st.button("üìä –°–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç", key="btn_15"):
            st.success("–û—Ç—á–µ—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω —Å–æ–∑–¥–∞–Ω")
    with col3:
        if st.button("üîç –ù–∞–π—Ç–∏ –∞–Ω–æ–º–∞–ª–∏–∏", key="btn_16"):
            st.success("–ü–æ–∏—Å–∫ –∞–Ω–æ–º–∞–ª–∏–π –≤ —Ü–µ–Ω–∞—Ö –∑–∞–ø—É—â–µ–Ω")

# =============================================================================
# –õ–û–ì–ò - –ü–û–õ–ù–ê–Ø –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨
# =============================================================================
elif page == "üìù –õ–æ–≥–∏":
    st.markdown("## üìù –õ–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã")
    
    # –§–∏–ª—å—Ç—Ä—ã –ª–æ–≥–æ–≤
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        log_level = st.selectbox("–£—Ä–æ–≤–µ–Ω—å", ["–í—Å–µ", "INFO", "WARNING", "ERROR", "SUCCESS"])
    
    with col2:
        log_type = st.selectbox("–¢–∏–ø", ["–í—Å–µ", "API", "Database", "Sync", "Validation"])
    
    with col3:
        log_period = st.selectbox("–ü–µ—Ä–∏–æ–¥", ["–ü–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å", "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞", "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π", "–í—Å–µ –≤—Ä–µ–º—è"])
    
    with col4:
        log_search = st.text_input("–ü–æ–∏—Å–∫", placeholder="–ü–æ–∏—Å–∫ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—é")
    
    # –¢–∞–±–ª–∏—Ü–∞ –ª–æ–≥–æ–≤
    st.markdown("### üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏")
    
    logs_data = pd.DataFrame({
        '–í—Ä–µ–º—è': ['15:30:45', '15:29:12', '15:28:33', '15:27:01', '15:26:15'],
        '–£—Ä–æ–≤–µ–Ω—å': ['INFO', 'SUCCESS', 'WARNING', 'ERROR', 'INFO'],
        '–¢–∏–ø': ['API', 'Sync', 'Database', 'API', 'Validation'],
        '–°–æ–æ–±—â–µ–Ω–∏–µ': [
            '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Content Cards –∑–∞–≤–µ—Ä—à–µ–Ω–∞',
            '–û–±–Ω–æ–≤–ª–µ–Ω–æ 156 —Ç–æ–≤–∞—Ä–æ–≤',
            '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤',
            '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API',
            '–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–π–¥–µ–Ω–∞'
        ],
        '–î–µ—Ç–∞–ª–∏': ['156 —Ç–æ–≤–∞—Ä–æ–≤', '–£—Å–ø–µ—Ö', '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —á–µ—Ä–µ–∑ 1 –º–∏–Ω', '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–ª—é—á', '0 –æ—à–∏–±–æ–∫']
    })
    
    st.dataframe(logs_data, key="btn_17")
    
    # –î–µ–π—Å—Ç–≤–∏—è —Å –ª–æ–≥–∞–º–∏
    col1, col2, col3 = st.columns(3)
    
    with col1:
        if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –ª–æ–≥–∏", key="btn_18"):
            st.success("–õ–æ–≥–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
    
    with col2:
        if st.button("üì§ –≠–∫—Å–ø–æ—Ä—Ç –ª–æ–≥–æ–≤", key="btn_19"):
            st.success("–≠–∫—Å–ø–æ—Ä—Ç –ª–æ–≥–æ–≤ –∑–∞–ø—É—â–µ–Ω")
    
    with col3:
        if st.button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏", key="btn_20"):
            st.success("–û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ –∑–∞–ø—É—â–µ–Ω–∞")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–æ–≤
    st.markdown("### üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–æ–≤")
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.metric("–í—Å–µ–≥–æ –ª–æ–≥–æ–≤", "1,234", "+12")
    with col2:
        st.metric("–û—à–∏–±–æ–∫", "3", "-2")
    with col3:
        st.metric("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π", "15", "+3")
    with col4:
        st.metric("–£—Å–ø–µ—à–Ω—ã—Ö", "1,216", "+11")

# =============================================================================
# SQL –ó–ê–ü–†–û–°–´ - –ü–û–õ–ù–ê–Ø –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨
# =============================================================================
elif page == "üîß SQL –ó–∞–ø—Ä–æ—Å—ã":
    st.markdown("## üîß SQL –ó–∞–ø—Ä–æ—Å—ã")
    
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.markdown("### –†–µ–¥–∞–∫—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å–æ–≤")
        
        # –ü—Ä–∏–º–µ—Ä SQL –∑–∞–ø—Ä–æ—Å–∞
        default_query = """-- –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞: –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Å —Ü–µ–Ω–∞–º–∏
SELECT 
    p.nm_id,
    p.vendor_code,
    p.brand,
    p.title,
    ue.price,
    ue.discounted_price,
    ue.discount
FROM products p
LEFT JOIN unit_economics ue ON p.nm_id = ue.nm_id
WHERE p.active = true
ORDER BY p.updated_at DESC
LIMIT 100;"""
        
        sql_query = st.text_area(
            "SQL –∑–∞–ø—Ä–æ—Å",
            value=default_query,
            height=300,
            help="–í–≤–µ–¥–∏—Ç–µ SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"
        )
        
        col_a, col_b, col_c = st.columns(3)
        with col_a:
            if st.button("‚ñ∂Ô∏è –í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å", type="primary"):
                if sql_query.strip():
                    st.success("‚úÖ –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω!")
                    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞
                else:
                    st.error("‚ùå –í–≤–µ–¥–∏—Ç–µ SQL –∑–∞–ø—Ä–æ—Å")
        
        with col_b:
            if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å"):
                st.info("–ó–∞–ø—Ä–æ—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
        
        with col_c:
            if st.button("üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å"):
                st.info("–ó–∞–ø—Ä–æ—Å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω")
    
    with col2:
        st.markdown("### –ì–æ—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã")
        
        queries = [
            "–í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã",
            "–¢–æ–≤–∞—Ä—ã —Å —Ü–µ–Ω–∞–º–∏",
            "–¢–æ–≤–∞—Ä—ã –±–µ–∑ —Ü–µ–Ω",
            "–ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ü–µ–Ω",
            "–û—Å—Ç–∞—Ç–∫–∏ –ø–æ —Å–∫–ª–∞–¥–∞–º",
            "–¢–æ–ø —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º",
            "–ê–Ω–∞–ª–∏–∑ —Å–∫–∏–¥–æ–∫",
            "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –±—Ä–µ–Ω–¥–∞–º"
        ]
        
        for i, query in enumerate(queries):
            if st.button(f"üìã {query}", key=f"sql_btn_{i}"):
                st.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω –∑–∞–ø—Ä–æ—Å: {query}")
        
        st.markdown("### –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤")
        
        with st.expander("üìä –û—Å–Ω–æ–≤–Ω—ã–µ –≤—ã–±–æ—Ä–∫–∏"):
            st.code("SELECT * FROM products WHERE active = true;")
            st.code("SELECT * FROM unit_economics WHERE price > 1000;")
        
        with st.expander("üîÑ Upsert –æ–ø–µ—Ä–∞—Ü–∏–∏"):
            st.code("INSERT INTO products (...) VALUES (...) ON CONFLICT DO UPDATE...")
        
        with st.expander("üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞"):
            st.code("SELECT brand, COUNT(*), AVG(price) FROM products GROUP BY brand;")
        
        with st.expander("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö"):
            st.code("DELETE FROM validation_logs WHERE timestamp < NOW() - INTERVAL '30 days';")
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞
    st.markdown("### –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞")
    if sql_query.strip():
        # –ü—Ä–∏–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        result_data = pd.DataFrame({
            'nm_id': [12345, 12346, 12347],
            'vendor_code': ['VC001', 'VC002', 'VC003'],
            'brand': ['Brand A', 'Brand B', 'Brand A'],
            'title': ['–¢–æ–≤–∞—Ä 1', '–¢–æ–≤–∞—Ä 2', '–¢–æ–≤–∞—Ä 3'],
            'price': [1500, 2300, 1800],
            'discounted_price': [1350, 1955, 1800],
            'discount': [10, 15, 0]
        })
        st.dataframe(result_data, key="btn_22")
        
        st.markdown("**–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:**")
        col1, col2, col3 = st.columns(3)
        with col1:
            st.metric("–°—Ç—Ä–æ–∫ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ", "3")
        with col2:
            st.metric("–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è", "0.15 —Å–µ–∫")
        with col3:
            st.metric("–†–∞–∑–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞", "2.1 KB")
    else:
        st.info("–í—ã–±–µ—Ä–∏—Ç–µ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")

# =============================================================================
# –ù–ê–°–¢–†–û–ô–ö–ò - –ü–û–õ–ù–ê–Ø –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨
# =============================================================================
elif page == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏":
    st.markdown("## ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã")
    
    # API –∫–ª—é—á–∏
    st.markdown("### üîë API –∫–ª—é—á–∏")
    
    with st.expander("Wildberries API"):
        col1, col2 = st.columns(2)
        with col1:
            wb_api_key = st.text_input(
                "WB API –∫–ª—é—á",
                value="***—Å–∫—Ä—ã—Ç***",
                type="password",
                help="API –∫–ª—é—á –¥–ª—è Content Cards"
            )
        with col2:
            discounts_api_key = st.text_input(
                "Discounts API –∫–ª—é—á", 
                value="***—Å–∫—Ä—ã—Ç***",
                type="password",
                help="API –∫–ª—é—á –¥–ª—è —Ü–µ–Ω –∏ —Å–∫–∏–¥–æ–∫"
            )
        
        if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å API –∫–ª—é—á–∏"):
            st.success("API –∫–ª—é—á–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    
    with st.expander("Google Sheets API"):
        gs_credentials = st.text_area(
            "Google Sheets Credentials (JSON)",
            height=100,
            help="JSON —Å credentials –¥–ª—è Google Sheets API"
        )
        if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å GS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"):
            st.success("Google Sheets –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    
    with st.expander("Supabase"):
        col1, col2 = st.columns(2)
        with col1:
            supabase_url = st.text_input("Supabase URL", value="https://***.supabase.co")
        with col2:
            supabase_key = st.text_input("Supabase Key", type="password", value="***—Å–∫—Ä—ã—Ç***")
        if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å Supabase –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"):
            st.success("Supabase –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    st.markdown("### üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("#### –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è")
        auto_sync = st.checkbox("–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é", value=True)
        sync_interval = st.selectbox(
            "–ò–Ω—Ç–µ—Ä–≤–∞–ª —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏",
            ["–ö–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç", "–ö–∞–∂–¥—ã–π —á–∞—Å", "–ö–∞–∂–¥—ã–µ 3 —á–∞—Å–∞", "–†–∞–∑ –≤ –¥–µ–Ω—å"]
        )
        sync_content = st.checkbox("–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å Content Cards", value=True)
        sync_prices = st.checkbox("–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–Ω—ã", value=True)
        sync_warehouse = st.checkbox("–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ—Å—Ç–∞—Ç–∫–∏", value=False)
    
    with col2:
        st.markdown("#### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
        batch_size = st.number_input("–†–∞–∑–º–µ—Ä –±–∞—Ç—á–∞", min_value=10, max_value=1000, value=100, key="batch_size_2")
        max_items = st.number_input("–ú–∞–∫—Å–∏–º—É–º —Ç–æ–≤–∞—Ä–æ–≤ –∑–∞ —Ä–∞–∑", min_value=100, max_value=10000, value=1000, key="max_items_2")
        retry_attempts = st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫", min_value=1, max_value=10, value=3, key="retry_attempts")
        timeout = st.number_input("–¢–∞–π–º–∞—É—Ç (—Å–µ–∫)", min_value=10, max_value=300, value=60, key="timeout")
    
    if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"):
        st.success("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    st.markdown("### üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    
    col1, col2 = st.columns(2)
    
    with col1:
        email_notifications = st.checkbox("Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", value=False)
        email_address = st.text_input("Email –∞–¥—Ä–µ—Å", disabled=not email_notifications)
        notify_errors = st.checkbox("–£–≤–µ–¥–æ–º–ª—è—Ç—å –æ–± –æ—à–∏–±–∫–∞—Ö", value=True)
        notify_success = st.checkbox("–£–≤–µ–¥–æ–º–ª—è—Ç—å –æ–± —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö", value=False)
    
    with col2:
        telegram_notifications = st.checkbox("Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", value=False)
        telegram_bot_token = st.text_input("Bot Token", type="password", disabled=not telegram_notifications)
        telegram_chat_id = st.text_input("Chat ID", disabled=not telegram_notifications)
    
    if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"):
        st.success("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    st.markdown("### üñ•Ô∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    
    col1, col2 = st.columns(2)
    
    with col1:
        log_level = st.selectbox("–£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è", ["DEBUG", "INFO", "WARNING", "ERROR"])
        log_retention = st.number_input("–•—Ä–∞–Ω–∏—Ç—å –ª–æ–≥–∏ (–¥–Ω–µ–π)", min_value=7, max_value=365, value=30, key="log_retention")
        cache_size = st.number_input("–†–∞–∑–º–µ—Ä –∫—ç—à–∞ (MB)", min_value=10, max_value=1000, value=100, key="cache_size")
    
    with col2:
        theme = st.selectbox("–¢–µ–º–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞", ["–¢–µ–º–Ω–∞—è", "–°–≤–µ—Ç–ª–∞—è", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è"])
        language = st.selectbox("–Ø–∑—ã–∫", ["–†—É—Å—Å–∫–∏–π", "English"])
        timezone = st.selectbox("–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å", ["Europe/Moscow", "UTC", "Europe/London"])
    
    if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"):
        st.success("–°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    
    # –î–µ–π—Å—Ç–≤–∏—è
    st.markdown("### üîß –î–µ–π—Å—Ç–≤–∏—è")
    
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        if st.button("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã", key="btn_23"):
            st.success("–°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã")
    
    with col2:
        if st.button("üßπ –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à", key="btn_24"):
            st.success("–ö—ç—à –æ—á–∏—â–µ–Ω")
    
    with col3:
        if st.button("üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É", key="btn_25"):
            st.success("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    
    with col4:
        if st.button("üíæ –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é", key="btn_26"):
            st.success("–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞")
